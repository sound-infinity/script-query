local a,b,c,d=(function(e)local f={[{}]=true}local g;local h={}local require;local i={}g=function(j,k)if not h[j]then h[j]=k end end;require=function(j)local l=i[j]if l then if l==f then return nil end else if not h[j]then if not e then local m=type(j)=='string'and'\"'..j..'\"'or tostring(j)error('Tried to require '..m..', but no such module has been registered')else return e(j)end end;i[j]=f;l=h[j](require,i,g,h)i[j]=l end;return l end;return require,i,g,h end)(require)c("__root",function(require,n,c,d)local o=require("card-list")_G.WeAreDevs=o end)c("card-list",function(require,n,c,d)local p=require("selectors")local q=require("card-class")local r="https://wearedevs.net/scripts"local s=table.insert;local o={collection={},_initialized=false}function o:fetch()self._initialized=true;self.collection={}local t=game:HttpGet(r):match(p.CARDLIST)for u in t:gmatch(p.CARD)do s(self.collection,q:new(u))end end;function o:search(v)if not self._initialized then self:fetch()end;for w,x in next,self.collection do if x.title:match(v)then return x end end end;return o end)c("card-class",function(require,n,c,d)local p=require("selectors")local q={}function q:new(y)assert(type(y)=="string","expected a html string for new card.")local z={}setmetatable(z,q)q.__index=q;z.title=y:match(p.CARD_TITLE)z.description=y:match(p.CARD_DESCRIPTION)z.downloadUrl=("https://wearedevs.net%s"):format(y:match(p.CARD_DOWNLOADURL))return z end;function q:GetCodeAsync(A,B)coroutine.wrap(function(A)local C=game:HttpGet(self.downloadUrl:gsub(" ","%%20"))local D=C:match('.-btnDownload.-href.-"(.-)"'):gsub(" ","%%20")if type(D)~="string"then B("absoluteUrl not a string",D)return end;local E=game:HttpGet(D)A(E)end)(A)end;return q end)c("selectors",function(require,n,c,d)return{CARDLIST='<main>.-<div.-class="releases".->(.+)</div>.-</main>',CARD='<div.-class="release%-card.-".->.-</a>.-</div>',CARD_TITLE=".-release%-title.->(.-)</",CARD_DESCRIPTION=".-release%-description.->.-<p>(.-)</",CARD_DOWNLOADURL='.-download%-button.-href.-"(.-)"'}end)return a("__root")
